Connect HTML  page in Django
------------------------------------

-> apps.py 
-> class name copy
-> setting.py 
-> INSTALLD_APP 'app_name.apps.class_name' 
-> template folder creat 
-> DATABASES then NAME full copy 
-> TEMPLATES DIRS = [] paste and change sql part and write template 
-> app name folder create inside the template because many app can be hold 
-> then create 3 html page 
-> views.py then write function 
    def home(request):
       return render(request, template_name ='folder_name\home.html') 
    repeat it 3 times 
-> urls.py 
    from app_name import views as app_name 
    path('', app_name(as).home, name = 'home')
-> base.html in template folder
    <h1>Navbar</h1>
    {% block content %}

    {% endblock %}
    <h1>Footer</h1>
-> go to home.html and erase all and
    {% extends 'base.html '%} 
    {% block content %}
    <h1>Home</h1>
    {% endblock %}

-> go to boostrap then introduction and then copy css code and pase in base.html head and js before finish the body 
-> now remove navbar from base and add a navbar.html in template and copy from bootstarp and connect it into base
    {% include 'navbar.html' %}

-> then go to navbar.html and edit the navbar href 
    href="{% url 'home' %}"

---------------------------------------------------------------------------- models and html read

-> models.py
  from django.db import models

  class Author(models.Model):
     name=models.CharField(max_length=30)
     age=models.IntegerField()
     type=models.ForeignKey(Type, on_delete=models.CASCADE)
     status=(
         ('clear','clear'),
         ('approve','approve')
         )
     choose_status=models.CharField(max_length=30,choices=status)

     def __str__(self):
         return self.name

-> views.py
  from .models import * (add it in views)
  def home(request):
      author = Author.objects.all()
      context={
          'author': author
      }
      return render(request, template_name ='tryapp\home.html',context=context) 

-> admin.py
  from .models import * (add it in views and admin)
  admin.site.register([Type, Author])

-> now html add
  {% extends 'base.html' %}
  {% block content %}
  {% for ty in type %}
  <div class="card" style="width: 18rem;">
      <div class="card-body">
          <h5 class="card-title">{{ty.title}}</h5>
          <h6 class="card-subtitle mb-2 text-muted">{{ty.desc}}</h6>
      </div>
  </div>
  {% endfor %}
  {% endblock %}


-------------------------------------------------------crud

-> create static(assets,css,js) and media folder

-> settings.py
import os
STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR/'static',]
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

-> models.py
import uuid
class CarType(models.Model):
    name = models.CharField(max_length=100) #(SUV, Sedan)
    description = models.TextField(blank=True, null=True)

    def __str__(self):
        return self.name


class Car(models.Model):
    c_id = models.UUIDField(
        primary_key=True,
        default= uuid.uuid4,
        editable=False,
    )
    image = models.ImageField(upload_to='car_images/img',blank=True, null=True)
    name = models.CharField(max_length=100)  #(Toyota,BMW)
    model_year = models.IntegerField()
    car_type = models.ForeignKey(CarType, on_delete=models.CASCADE)
    status_choices = (
        ('available', 'Available'),
        ('sold', 'Sold'),
        ('reserved', 'Reserved')
    )
    status = models.CharField(max_length=20, choices=status_choices, default='available')

    def __str__(self):
        return f"{self.name} ({self.model_year})"

-> forms.py
from django.forms import ModelForm
from .models import *
from django import forms
class CarForm(ModelForm):
   class Meta:
       model = Car
       fields = '__all__'


-> admin.py
  from .models import * (add it in views and admin)
  admin.site.register([Type, Author])


-> views.py
def home(request):
    car = Car.objects.all()
    context={
        'car': car
    }
    return render(request, template_name ='HireCar\home.html',context=context) 

def details(request,id):
    car = Car.objects.get(pk = id)
    context = {
        'car':car,
    }
    return render(request, template_name ='HireCar\details.html',context=context) 

def upload_car(request):
   form = CarForm()
   if request.method == 'POST':
       form = CarForm(request.POST, request.FILES)
       if form.is_valid():
           form.save()
           return redirect('home')  # Redirect after saving the car
   context = {'form': form}
   return render(request, template_name='HireCar/car_form.html', context=context)

def update_car(request, id):
   car = Car.objects.get(pk=id)
   form = CarForm(instance=car)
   if request.method == 'POST':
       form = CarForm(request.POST, request.FILES, instance=car)
       if form.is_valid():
           form.save()
           return redirect('home')  # Redirect after updating the car
   context = {'form': form}
   return render(request, template_name='HireCar/car_form.html', context=context)

def delete_car(request, id):
    car = get_object_or_404(Car, pk=id)  # Use get_object_or_404 to handle invalid IDs gracefully
    if request.method == 'POST':
        car.delete()
        return redirect('home')  # Redirect to home after deletion



-> urls.py
from django.contrib import admin
from django.urls import path
from django.conf import settings
from django.conf.urls.static import static
from HireCar import views as Hire_views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('home', Hire_views.home, name='home'),
    path('details/<uuid:id>/', Hire_views.details, name='details'),
    path('upload/', Hire_views.upload_car, name='upload_car'),  # URL for uploading a car
    path('Update/<uuid:id>/', Hire_views.update_car, name='update_car'),
    path('delete/<uuid:id>/', Hire_views.delete_car, name='delete_car'),    
]+ static(settings.MEDIA_URL,document_root = settings.MEDIA_ROOT)


->html template (home,details,form)
base.html
----------
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Home{% endblock %}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
</head>

<body>
    {% if not hide_nav_footer %}
    {% include 'navbar.html' %}
    {% endif %}

    {% block content %}

    {% endblock %}

    {% if not hide_nav_footer %}
    {% include 'footer.html' %}
    {% endif %}

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"></script>
</body>

</html>


navbar.html
-------------
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="{% url 'home' %}">HireYourWheels</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="{% url 'home' %}">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="{% url 'profile' %}">profile</a>
                </li>
        </div>
    </div>
</nav>




footer.html
-------------
<!-- Font Awesome CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    integrity="sha512-y0AZy9Ch3dpVIMc3y2e7D1Azl+kI7jPSg9RcfLIF4iI6eH6I4xJZVwV6oMcr7ZV2Zh8jIzJYJJm6mt6DQnxm6w=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />


<!-- Remove the container if you want to extend the Footer to full width. -->
<div class="container my-5">
    <!-- Footer -->
    <footer class="text-center text-lg-start text-white" style="background-color: #45526e">
        <!-- Grid container -->
        <div class="container p-4 pb-0">

            <!-- Section: Copyright -->
            <section class="p-3 pt-0">
                <div class="row d-flex align-items-center">
                    <!-- Grid column -->
                    <div class="col-md-7 col-lg-8 text-center text-md-start">
                        <!-- Copyright -->
                        <div class="p-3">
                            Â© 2020 Copyright:
                            <a class="text-white" href="https://mdbootstrap.com/">HireYourWheels.com</a>
                        </div>
                        <!-- Copyright -->
                    </div>

    </footer>
    <!-- Footer -->
</div>
<!-- End of .container -->

home.html
----------
{% extends 'base.html' %}
{% load static %}
{% block title %}Home{% endblock %}
{% block content %}

<head>
    <link rel="stylesheet" href="{% static 'css/home.css' %}">
</head>

<!-- Centered Button -->
<div class="center-button">
    <a href="{% url 'upload_car' %}" class="btn btn-primary">Add New Car</a>
</div>

<!-- Car Cards -->
<div class="card-container">
    {% for car in car %}
    <div class="card" style="width: 18rem;">
        {% if car.image %}
        <img class="card-img-top" src="{{ car.image.url }}" alt="Car">
        {% endif %}
        <div class="card-body">
            <h5 class="card-title">{{ car.name }}</h5>
            <p class="card-text">{{ car.status }}</p>
        </div>
        <ul class="list-group list-group-flush">
            <li class="list-group-item">{{ car.model_year }}</li>
            <li class="list-group-item">{{ car.car_type }}</li>
        </ul>
        <div class="card-body">
            <a href="{% url 'details' car.c_id %}" class="card-link">Details</a>
        </div>
    </div>
    {% endfor %}
</div>

{% endblock %}

details.html
--------------
{% extends 'base.html' %}
{% block title %}Details{% endblock %}
{% load static %}
{% block content %}
<h2>Name - {{ car.name }}</h2>
<h3>Status: {{ car.status }}</h3>

<!-- Update Button -->
<div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
    <div class="text-center">
        <a class="btn btn-outline-dark mt-auto" href="{% url 'update_car' car.c_id %}">Update</a>
    </div>
</div>

<!-- Delete Button (submit form) -->
<form method="POST" action="{% url 'delete_car' car.c_id %}">
    {% csrf_token %}
    <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
        <div class="text-center">
            <button type="submit" class="btn btn-outline-danger mt-auto">Delete</button>
        </div>
    </div>
</form>
{% endblock %}

form.html
----------
{% extends 'base.html' %}
{% load static %}
{% block content %}

<form method="POST" enctype="multipart/form-data">
    {% csrf_token %}
    {{ form.as_p }} <!-- This renders the form fields -->
    <input type="submit" name="Submit">
</form>

{% endblock %}


home css
----------
/* Example of some basic styles for your card */
.card {
  margin: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.card-img-top {
  border-radius: 10px 10px 0 0;
}

.card-body {
  text-align: center;
}

.card-title {
  font-size: 1.5rem;
  font-weight: bold;
}

.card-text {
  font-size: 1rem;
  color: #555;
}

/* Container for cards to be displayed in a row direction */
.card-container {
  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(300px, 1fr)
  ); /* Multiple columns, auto-adjusts to screen size */
  gap: 20px; /* Space between each card */
  align-items: start; /* Align items to the top */
  justify-items: center; /* Align cards in the center horizontally */
}

.center-button {
    text-align: center;
    margin: 30px 0;
}

.card-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
}
